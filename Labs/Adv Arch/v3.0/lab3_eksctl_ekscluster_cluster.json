{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EKS cluster (dedicated VPC: false, dedicated IAM: true) [created and managed by eksctl]",
  "Mappings": {
    "ServicePrincipalPartitionMap": {
      "aws": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-cn": {
        "EC2": "ec2.amazonaws.com.cn",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-us-gov": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      }
    }
  },
  "Resources": {
    "ClusterSharedNodeSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Communication between all nodes in the cluster",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/ClusterSharedNodeSecurityGroup"
            }
          }
        ],
        "VpcId": "vpc-0e1865e3e257ea470"
      }
    },
    "ControlPlane": {
      "Type": "AWS::EKS::Cluster",
      "Properties": {
        "Name": "ekscluster",
        "ResourcesVpcConfig": {
          "SecurityGroupIds": [{ "Ref": "ControlPlaneSecurityGroup" }],
          "SubnetIds": [
            "subnet-0dd6887a391bff1a9",
            "subnet-0082c01677632ece7",
            "subnet-06718a6d74f07c008",
            "subnet-0d57a427fb6ec31c9"
          ]
        },
        "RoleArn": { "Fn::GetAtt": "ServiceRole.Arn" },
        "Version": "1.15",
        "EncryptionConfig": [
          {
            "Provider": {
              "KeyArn": "arn:aws:kms:us-west-2:533985062936:key/23230496-98b0-4916-93c3-a50b24cd7c84"
            },
            "Resources": ["secrets"]
          }
        ]
      }
    },
    "ControlPlaneSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Communication between the control plane and worker nodegroups",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/ControlPlaneSecurityGroup"
            }
          }
        ],
        "VpcId": "vpc-0e1865e3e257ea470"
      }
    },
    "IngressDefaultClusterToNodeSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow managed and unmanaged nodes to communicate with each other (all ports)",
        "FromPort": 0,
        "GroupId": { "Ref": "ClusterSharedNodeSecurityGroup" },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId"
        },
        "ToPort": 65535
      }
    },
    "IngressInterNodeGroupSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow nodes to communicate with each other (all ports)",
        "FromPort": 0,
        "GroupId": { "Ref": "ClusterSharedNodeSecurityGroup" },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": { "Ref": "ClusterSharedNodeSecurityGroup" },
        "ToPort": 65535
      }
    },
    "IngressNodeToDefaultClusterSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow unmanaged nodes to communicate with control plane (all ports)",
        "FromPort": 0,
        "GroupId": { "Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId" },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": { "Ref": "ClusterSharedNodeSecurityGroup" },
        "ToPort": 65535
      }
    },
    "PolicyCloudWatchMetrics": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["cloudwatch:PutMetricData"],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}-PolicyCloudWatchMetrics"
        },
        "Roles": [{ "Ref": "ServiceRole" }]
      }
    },
    "PolicyNLB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "elasticloadbalancing:*",
                "ec2:CreateSecurityGroup",
                "ec2:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": { "Fn::Sub": "${AWS::StackName}-PolicyNLB" },
        "Roles": [{ "Ref": "ServiceRole" }]
      }
    },
    "ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::FindInMap": [
                      "ServicePrincipalPartitionMap",
                      { "Ref": "AWS::Partition" },
                      "EKS"
                    ]
                  },
                  {
                    "Fn::FindInMap": [
                      "ServicePrincipalPartitionMap",
                      { "Ref": "AWS::Partition" },
                      "EKSFargatePods"
                    ]
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSClusterPolicy"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ARN": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::ARN" } },
      "Value": { "Fn::GetAtt": "ControlPlane.Arn" }
    },
    "CertificateAuthorityData": {
      "Value": { "Fn::GetAtt": "ControlPlane.CertificateAuthorityData" }
    },
    "ClusterSecurityGroupId": {
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}::ClusterSecurityGroupId" }
      },
      "Value": { "Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId" }
    },
    "ClusterStackName": { "Value": { "Ref": "AWS::StackName" } },
    "Endpoint": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::Endpoint" } },
      "Value": { "Fn::GetAtt": "ControlPlane.Endpoint" }
    },
    "FeatureNATMode": { "Value": "Disable" },
    "SecurityGroup": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::SecurityGroup" } },
      "Value": { "Ref": "ControlPlaneSecurityGroup" }
    },
    "ServiceRoleARN": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::ServiceRoleARN" } },
      "Value": { "Fn::GetAtt": "ServiceRole.Arn" }
    },
    "SharedNodeSecurityGroup": {
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}::SharedNodeSecurityGroup" }
      },
      "Value": { "Ref": "ClusterSharedNodeSecurityGroup" }
    },
    "SubnetsPrivate": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::SubnetsPrivate" } },
      "Value": {
        "Fn::Join": [
          ",",
          ["subnet-0dd6887a391bff1a9", "subnet-0082c01677632ece7"]
        ]
      }
    },
    "SubnetsPublic": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::SubnetsPublic" } },
      "Value": {
        "Fn::Join": [
          ",",
          ["subnet-06718a6d74f07c008", "subnet-0d57a427fb6ec31c9"]
        ]
      }
    },
    "VPC": {
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}::VPC" } },
      "Value": "vpc-0e1865e3e257ea470"
    }
  }
}
